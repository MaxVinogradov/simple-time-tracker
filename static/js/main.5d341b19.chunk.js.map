{"version":3,"sources":["utils/generateTasks.js","store/reducer.js","store/types.js","localStorage/index.js","sagas/index.js","pages/NotFoundPage/index.jsx","utils/durationFormatter.js","pages/TaskDetailsPage/styles.js","pages/TaskDetailsPage/index.jsx","pages/MainPage/components/AlertDialog/styles.js","pages/MainPage/components/AlertDialog/index.jsx","pages/MainPage/components/Timer/styles.js","pages/MainPage/components/Timer/index.jsx","store/actionsCreator.js","pages/MainPage/components/InfoTabs/styles.js","utils/generateChartData.js","pages/MainPage/components/ChartTab/styles.js","pages/MainPage/components/ChartTab/index.jsx","pages/MainPage/components/TableTab/styles.js","pages/MainPage/components/TableTab/index.jsx","pages/MainPage/components/InfoTabs/TabPanel.jsx","pages/MainPage/components/InfoTabs/RouterLink.jsx","pages/MainPage/components/InfoTabs/TabLink.jsx","pages/MainPage/components/InfoTabs/index.jsx","pages/MainPage/components/InfoTabs/useTabsWithRouter.js","pages/MainPage/styles.js","pages/MainPage/index.jsx","App.js","serviceWorker.js","index.js"],"names":["generateDuration","highRange","Math","floor","random","generateTasks","endTime","count","ceil","startTime","Date","setHours","valueOf","Array","fill","map","duration","id","toString","task","name","initialState","tasks","currentTask","reducer","combineReducers","tasksStore","state","action","type","filter","tasksIdToRemove","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","logger","runSaga","run","loadState","serializedState","localStorage","getItem","JSON","parse","e","saveState","setItem","stringify","loadStoreAsync","watchLoadStoreAsync","dumpStoreAsync","watchDumpStoreAsync","root","loadedState","put","takeEvery","select","_state","all","NotFoundPage","history","useHistory","Paper","Button","onClick","push","formatTimeUnit","unit","formatTimerCounter","ms","hours","minutes","seconds","makeStyles","theme","alignItemsAndJustifyContent","width","alignSelf","margin","display","flexDirection","justifyContent","alignItems","boxShadow","shadows","connect","classes","useStyles","useParams","find","tasksId","taskId","className","List","component","aria-label","ListItem","divider","ListItemText","primary","Divider","toTimeString","split","button","Typography","style","color","dialogTitle","palette","error","main","Transition","forwardRef","props","ref","Slide","direction","AlertDialog","dialogOpen","setDialogOpen","taskNameInputRef","Dialog","open","TransitionComponent","keepMounted","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","current","disabled","timerContainer","padding","timerClock","borderRadius","height","fontWeight","typography","fontWeightBold","fontSize","h4","stopBtn","taskNameInput","textAlign","startTimer","stopTimer","memo","useRef","interval","value","useState","counter","setCounter","buttonText","setButtonText","useEffect","intervalValue","setInterval","clearInterval","onButtonClick","useCallback","TextField","InputProps","placeholder","autoFocus","inputRef","data-test-id","size","infoTabsContainer","backgroundColor","background","paper","generateChartData","item","idx","startOfHour","endOfHour","reduce","acc","startOfHourDuration","msDuration","splitTimePerHour","chartContainer","chart","generateButton","customXAxis","marginTop","chartData","data","top","right","left","bottom","strokeDasharray","dataKey","position","offset","domain","btnWithShadow","customTr","deleteTask","onRemoveTaskBtnClick","onInfoTaskBtnClick","TableContainer","Table","table","TableHead","TableRow","TableCell","align","TableBody","length","key","TabPanel","children","index","other","role","hidden","RouterLink","innerRef","TabLink","to","Tab","tabValue","routes","defaultRoute","match","useRouteMatch","path","useTabsWithRouter","AppBar","Tabs","variant","label","app","border","MainPage","InfoTabs","rootSaga","dispatch","window","Cypress","App","addEventListener","ev","preventDefault","getState","basename","from","exact","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.5d341b19.chunk.js","sourcesContent":["/* eslint-disable no-bitwise */\nconst generateDuration = (highRange = 80) => 60 * 100 * Math.floor(Math.random() * highRange + 10);\n\n\nconst generateTasks = () => {\n  const count = 15 - (Math.ceil(Math.random() * 100) % 5);\n  const timeBetweenTasks = 1200;\n  let startTime = new Date().setHours(0, 0, 0, 0).valueOf() + generateDuration(timeBetweenTasks);\n  let endTime;\n  return Array(count).fill(null).map(() => {\n    startTime += generateDuration();\n    const duration = generateDuration();\n    endTime = startTime + duration;\n    const id = `f${(~~(Math.random() * 1e8)).toString(16)}`;\n    const task = {\n      id,\n      name: `Auto-generated task #${id}`,\n      startTime: new Date(startTime),\n      duration,\n      endTime: new Date(endTime),\n    };\n    startTime = endTime + generateDuration(timeBetweenTasks);\n    return task;\n  });\n};\n\nexport default generateTasks;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport logger from 'redux-logger';\n\nimport {\n  START_TIMER, STOP_TIMER, DELETE_TASK, GENERATE_TASK, LOAD_STORE, RESET_STORE,\n} from './types';\nimport generateTasks from '../utils/generateTasks';\n\nconst initialState = {\n  tasks: [],\n  currentTask: {\n    duration: 0,\n  },\n};\n\nconst tasksReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case STOP_TIMER:\n      return {\n        ...state,\n        currentTask: { duration: 0 },\n        tasks: [...state.tasks, { ...action.currentTask }],\n      };\n    case START_TIMER:\n      return { ...state, currentTask: action.currentTask };\n    case DELETE_TASK:\n      return {\n        ...state,\n        tasks: state.tasks.filter(({ id }) => id !== action.tasksIdToRemove),\n      };\n    case GENERATE_TASK:\n      return { ...state, tasks: generateTasks() };\n    case LOAD_STORE:\n      return { ...state, currentTask: action.currentTask, tasks: action.tasks };\n    case RESET_STORE:\n      return { ...initialState };\n    default:\n      return { ...state };\n  }\n};\n\nconst reducer = combineReducers({ tasksStore: tasksReducer });\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(applyMiddleware(logger, sagaMiddleware)),\n);\n\nstore.runSaga = sagaMiddleware.run;\n\nexport default store;\n","export const START_TIMER = 'START_TIMER';\nexport const STOP_TIMER = 'STOP_TIMER';\nexport const DELETE_TASK = 'DELETE_TASK';\nexport const GENERATE_TASK = 'GENERATE_TASK';\nexport const RESET_STORE = 'RESET_STORE';\n\n// for sagas\nexport const LOAD_STORE_REQUEST = 'LOAD_STORE_REQUEST';\nexport const LOAD_STORE = 'LOAD_STORE';\nexport const DUMP_STORE_REQUEST = 'DUMP_STORE_REQUEST';\nexport const DUMP_STORE = 'DUMP_STORE';\n","/* eslint-disable no-undef */\nexport const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem('state');\n    if (serializedState === null) return undefined;\n    return JSON.parse(serializedState);\n  } catch (e) {\n    return undefined;\n  }\n};\n\nexport const saveState = (state) => localStorage.setItem('state', JSON.stringify(state));\n","import {\n  all, takeEvery, put, select,\n} from 'redux-saga/effects';\n\nimport {\n  LOAD_STORE, LOAD_STORE_REQUEST, DUMP_STORE_REQUEST,\n} from '../store/types';\n\nimport { loadState, saveState } from '../localStorage';\n\n\nexport function* loadStoreAsync() {\n  const loadedState = loadState();\n  if (!loadedState || !loadedState.tasksStore) {\n    yield put({ type: LOAD_STORE, tasks: [], currentTask: { duration: 0 } });\n  } else {\n    const store = loadedState.tasksStore;\n    store.tasks = store.tasks.map(({\n      id, name, duration, startTime, endTime,\n    }) => ({\n      id, name, duration, startTime: new Date(startTime), endTime: new Date(endTime),\n    }));\n    const { startTime, endTime } = store.currentTask;\n    store.currentTask.startTime = startTime && new Date(startTime);\n    store.currentTask.endTime = endTime && new Date(endTime);\n    yield put({ type: LOAD_STORE, ...store });\n  }\n}\n\nexport function* watchLoadStoreAsync() {\n  yield takeEvery(LOAD_STORE_REQUEST, loadStoreAsync);\n}\n\nexport function* dumpStoreAsync() {\n  const state = yield select((_state) => _state);\n  saveState(state);\n}\n\nexport function* watchDumpStoreAsync() {\n  yield takeEvery(DUMP_STORE_REQUEST, dumpStoreAsync);\n}\n\nexport default function* root() {\n  yield all([\n    watchLoadStoreAsync(),\n    watchDumpStoreAsync(),\n  ]);\n}\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Paper, Button } from '@material-ui/core';\n\nexport default function NotFoundPage() {\n  const history = useHistory();\n  return (\n    <Paper>\n      <h2>Page not found!</h2>\n      <Button onClick={() => history.push('/tasks')}>Go to tasks page</Button>\n    </Paper>\n  );\n}\n","export const formatTimeUnit = (unit) => (unit < 10 ? `0${unit}` : `${unit}`);\n\nexport const formatTimerCounter = (ms) => {\n  const hours = Math.floor(ms / 3600000);\n  const minutes = Math.floor((ms / 3600000 - hours) * 60);\n  const seconds = Math.floor(((ms / 3600000 - hours) * 60 - minutes) * 60);\n  return `${formatTimeUnit(hours)}:${formatTimeUnit(minutes)}:${formatTimeUnit(seconds)}`;\n};\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  alignItemsAndJustifyContent: {\n    width: 500,\n    alignSelf: 'center',\n    margin: '20px auto 20px',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    boxShadow: theme.shadows[6],\n  },\n}));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { useParams, useHistory } from 'react-router-dom';\nimport {\n  Paper, List, ListItem, ListItemText, Divider, Typography,\n} from '@material-ui/core';\n\nimport { formatTimerCounter } from '../../utils/durationFormatter';\nimport useStyles from './styles';\n\nfunction TaskDetailsPage({ tasks }) {\n  const classes = useStyles();\n  const { id } = useParams();\n  const history = useHistory();\n  const task = tasks.find(({ id: tasksId }) => id === tasksId);\n  if (!task) return history.push('/404');\n  const {\n    id: taskId, name, duration, startTime, endTime,\n  } = task;\n  return (\n    <Paper className={classes.alignItemsAndJustifyContent}>\n      <h2>Task</h2>\n      <List component=\"nav\" aria-label=\"mailbox folders\">\n        <ListItem divider>\n          <ListItemText primary={`ID: ${taskId}`} />\n        </ListItem>\n        <Divider />\n        <ListItem divider>\n          <ListItemText primary={`Name: ${name}`} />\n        </ListItem>\n        <Divider />\n        <ListItem divider>\n          <ListItemText primary={`Start time: ${startTime.toTimeString().split(' ')[0]}`} />\n        </ListItem>\n        <Divider />\n        <ListItem divider>\n          <ListItemText primary={`End time: ${endTime.toTimeString().split(' ')[0]}`} />\n        </ListItem>\n        <Divider />\n        <ListItem divider>\n          <ListItemText primary={`Duration: ${formatTimerCounter(duration)}`} />\n        </ListItem>\n        <Divider />\n        <ListItem button onClick={() => history.push('/tasks')}>\n          <ListItemText\n            primary={<Typography type=\"body2\" style={{ color: '#d32f2f' }}>Go to tasks page</Typography>}\n          />\n        </ListItem>\n      </List>\n    </Paper>\n  );\n}\n\nTaskDetailsPage.propTypes = {\n  tasks: PropTypes.arrayOf({\n    id: PropTypes.string,\n    name: PropTypes.string,\n    startTime: PropTypes.instanceOf(Date),\n    endTime: PropTypes.instanceOf(Date),\n    duration: PropTypes.number,\n  }).isRequired,\n};\n\n\nexport default connect(\n  ({ tasksStore: { tasks } }) => ({ tasks }),\n)(TaskDetailsPage);\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  dialogTitle: {\n    color: theme.palette.error.main,\n  },\n}));\n","import React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Slide,\n} from '@material-ui/core';\n\nimport useStyles from './styles';\n\n// eslint-disable-next-line react/jsx-props-no-spreading\nconst Transition = forwardRef((props, ref) => (<Slide direction=\"up\" ref={ref} {...props} />));\n\nconst AlertDialog = ({ dialogOpen, setDialogOpen, taskNameInputRef }) => {\n  const onClose = () => {\n    // eslint-disable-next-line no-param-reassign\n    taskNameInputRef.current.disabled = false;\n    setDialogOpen(false);\n  };\n  return (\n    <Dialog\n      open={dialogOpen}\n      TransitionComponent={Transition}\n      keepMounted\n      onClose={() => setDialogOpen(false)}\n      aria-labelledby=\"alert-dialog-slide-title\"\n      aria-describedby=\"alert-dialog-slide-description\"\n    >\n      <DialogTitle id=\"alert-dialog-slide-title\"><span className={useStyles().dialogTitle}>Empty task name</span></DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-slide-description\">\n          You are trying close your task without name, enter the title and try again!\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose} color=\"primary\">\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nAlertDialog.propTypes = {\n  dialogOpen: PropTypes.bool.isRequired,\n  setDialogOpen: PropTypes.func.isRequired,\n  taskNameInputRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.any }),\n  ]).isRequired,\n};\n\nexport default AlertDialog;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  timerContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: '0 0 30px 0',\n    padding: '20px 0 0 0',\n  },\n  timerClock: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: '50%',\n    boxShadow: theme.shadows[6],\n    width: '200px',\n    height: '200px',\n    margin: '30px',\n    color: theme.palette.primary.main,\n    fontWeight: theme.typography.fontWeightBold,\n    fontSize: theme.typography.h4.fontSize,\n  },\n  stopBtn: {\n    boxShadow: theme.shadows[5],\n  },\n  taskNameInput: {\n    textAlign: 'center',\n    color: theme.palette.primary.main,\n  },\n}));\n","/* eslint-disable no-bitwise */\nimport React, {\n  useState, useCallback, useEffect, useRef, memo,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { TextField, Button } from '@material-ui/core';\n\nimport { startTask, stopTask } from '../../../../store/actionsCreator';\nimport { formatTimerCounter } from '../../../../utils/durationFormatter';\nimport AlertDialog from '../AlertDialog';\nimport useStyles from './styles';\n\n\nconst Timer = ({\n  currentTask, startTimer, stopTimer,\n}) => {\n  const classes = useStyles();\n  const taskNameInputRef = useRef(null);\n  const interval = useRef({ value: 0 });\n  const [counter, setCounter] = useState(\n    currentTask.id ? new Date().valueOf() - currentTask.startTime.valueOf() : 0,\n  );\n  const [buttonText, setButtonText] = useState(currentTask.id ? 'Stop' : 'Start');\n\n  const [dialogOpen, setDialogOpen] = useState(false);\n\n  useEffect(() => {\n    const intervalValue = interval.current.value;\n    const { id, startTime, name } = currentTask;\n    if (id) {\n      interval.current.value = setInterval(() => {\n        setCounter(new Date().valueOf() - startTime.valueOf());\n      }, 1000);\n      taskNameInputRef.current.value = name || '';\n    }\n    return () => clearInterval(intervalValue);\n  }, [currentTask, interval]);\n\n  const onButtonClick = useCallback(() => {\n    if (buttonText === 'Start') {\n      const startTime = new Date();\n      startTimer({\n        duration: 0, startTime, name: taskNameInputRef.current.value, id: `f${(~~(Math.random() * 1e8)).toString(16)}`,\n      });\n      setButtonText('Stop');\n      interval.current.value = setInterval(\n        () => setCounter(new Date().valueOf() - startTime.valueOf()),\n        1000,\n      );\n    } else {\n      if (taskNameInputRef.current.value === '') {\n        setDialogOpen(true);\n        return;\n      }\n      clearInterval(interval.current.value);\n      const endTime = new Date();\n      stopTimer({\n        ...currentTask,\n        endTime,\n        duration: endTime - currentTask.startTime,\n        name: taskNameInputRef.current.value,\n      });\n      taskNameInputRef.current.value = '';\n      taskNameInputRef.current.disabled = false;\n      setCounter(0);\n      setButtonText('Start');\n    }\n  }, [buttonText, currentTask, startTimer, stopTimer]);\n\n  return (\n    <div className={classes.timerContainer}>\n      <TextField\n        className={classes.taskNameInput}\n        InputProps={{\n          className: classes.taskNameInput,\n        }}\n        placeholder=\"Name of your task\"\n        autoFocus\n        inputRef={taskNameInputRef}\n      />\n      <div\n        className={classes.timerClock}\n        data-test-id=\"timer-clock-face\"\n      >\n        {formatTimerCounter(counter)}\n      </div>\n      <Button\n        color=\"primary\"\n        size=\"large\"\n        className={classes.stopBtn}\n        onClick={onButtonClick}\n        data-test-id=\"timer-button\"\n      >\n        {buttonText}\n      </Button>\n      <AlertDialog\n        dialogOpen={dialogOpen}\n        setDialogOpen={setDialogOpen}\n        taskNameInputRef={taskNameInputRef}\n      />\n    </div>\n  );\n};\n\nTimer.propTypes = {\n  currentTask: PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string,\n    startTime: PropTypes.instanceOf(Date),\n    endTime: PropTypes.instanceOf(Date),\n    duration: PropTypes.number,\n  }).isRequired,\n  startTimer: PropTypes.func.isRequired,\n  stopTimer: PropTypes.func.isRequired,\n};\n\n\nexport default connect(\n  ({ tasksStore: { tasks, currentTask } }) => ({ tasks, currentTask }),\n  { startTimer: startTask, stopTimer: stopTask },\n)(memo(Timer));\n","import {\n  GENERATE_TASK, START_TIMER, STOP_TIMER, DELETE_TASK, DUMP_STORE_REQUEST,\n} from './types';\n\nexport const generateTask = () => ({ type: GENERATE_TASK });\n\nexport const startTask = (currentTask) => ({ type: START_TIMER, currentTask });\n\nexport const stopTask = (currentTask) => ({ type: STOP_TIMER, currentTask });\n\nexport const deleteTask = (tasksIdToRemove) => ({ type: DELETE_TASK, tasksIdToRemove });\n\nexport const dumpStore = () => ({ type: DUMP_STORE_REQUEST });\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  infoTabsContainer: {\n    width: '70%',\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n","const splitTimePerHour = (tasks) => Array(24).fill(0).map((item, idx) => {\n  const startOfHour = new Date().setHours(idx, 0, 0, 0);\n  const endOfHour = new Date().setHours(idx, 59, 59, 999);\n  const duration = tasks.reduce((acc, { startTime, endTime }) => {\n    const startOfHourDuration = startTime.valueOf() > startOfHour\n      ? startTime.valueOf()\n      : startOfHour;\n    const endOfHourDuration = endOfHour > endTime.valueOf()\n      ? endTime.valueOf()\n      : endOfHour;\n    const msDuration = endOfHourDuration - startOfHourDuration;\n    return acc + (msDuration < 0 ? 0 : Math.floor(msDuration / 60000));\n  }, 0);\n  return duration;\n});\n\nconst generateChartData = (tasks) => splitTimePerHour(tasks)\n  .map((item, idx) => ({ name: idx, minutes: item }));\n\nexport default generateChartData;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  chartContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  chart: {\n    alignSelf: 'center',\n  },\n  generateButton: {\n    width: '100px',\n    alignSelf: 'flex-end',\n    boxShadow: theme.shadows[6],\n  },\n  customXAxis: {\n    marginTop: '50px',\n  },\n}));\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {\n  BarChart, Bar, CartesianGrid, Tooltip, Legend, XAxis, YAxis, Label,\n} from 'recharts';\nimport { Button } from '@material-ui/core';\n\nimport { generateTask } from '../../../../store/actionsCreator';\nimport generateChartData from '../../../../utils/generateChartData';\nimport useStyles from './styles';\n\nfunction ChartTab({ tasks, generateTasks }) {\n  const classes = useStyles();\n  const chartData = generateChartData(tasks);\n  return (\n    <div className={classes.chartContainer}>\n      <BarChart\n        width={950}\n        height={400}\n        data={chartData}\n        className={classes.chart}\n        margin={{\n          top: 15, right: 0, left: 0, bottom: 10,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"5 5\" />\n        <XAxis\n          dataKey=\"name\"\n        >\n          <Label value=\"Minutes in this hours\" position=\"center\" offset={50} />\n        </XAxis>\n        <YAxis type=\"number\" domain={[0, 60]} />\n        <Tooltip />\n        <Legend />\n        <Bar dataKey=\"minutes\" fill=\"#3f51b5\" />\n      </BarChart>\n      <Button\n        color=\"primary\"\n        size=\"large\"\n        className={classes.generateButton}\n        onClick={() => generateTasks()}\n      >\n        GENERATE\n      </Button>\n    </div>\n  );\n}\n\nChartTab.propTypes = {\n  tasks: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string,\n    startTime: PropTypes.instanceOf(Date),\n    endTime: PropTypes.instanceOf(Date),\n    duration: PropTypes.number,\n  }).isRequired).isRequired,\n  generateTasks: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  ({ tasksStore: { tasks } }) => ({ tasks }),\n  { generateTasks: generateTask },\n)(memo(ChartTab));\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  btnWithShadow: {\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n  },\n  customTr: {\n    backgroundColor: '#EAF6FF',\n  },\n}));\n","import React, { useCallback, memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {\n  Table, TableBody, Button, TableCell, TableContainer, TableHead, TableRow,\n} from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport { deleteTask } from '../../../../store/actionsCreator';\nimport { formatTimerCounter } from '../../../../utils/durationFormatter';\n\nimport useStyles from './styles';\n\n\n// eslint-disable-next-line no-shadow\nfunction TableTab({ tasks, deleteTask }) {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const onRemoveTaskBtnClick = useCallback(\n    (id) => () => deleteTask(id),\n    [deleteTask],\n  );\n\n  const onInfoTaskBtnClick = useCallback(\n    (id) => () => history.push(`/tasks/${id}`),\n    [history],\n  );\n\n  return (\n    <TableContainer>\n      <Table className={classes.table}>\n        <TableHead>\n          <TableRow>\n            <TableCell>№</TableCell>\n            <TableCell align=\"center\">Task</TableCell>\n            <TableCell align=\"center\">Task start</TableCell>\n            <TableCell align=\"center\">Task end</TableCell>\n            <TableCell align=\"center\">Time spend</TableCell>\n            <TableCell align=\"center\">Info</TableCell>\n            <TableCell align=\"center\">Delete</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {tasks.length > 0 ? tasks.map(({\n            id, name, duration, startTime, endTime,\n          }, idx) => (\n            <TableRow key={id} className={classes.customTr}>\n              <TableCell>{idx}</TableCell>\n              <TableCell align=\"center\">{ name }</TableCell>\n              <TableCell align=\"center\">{ startTime.toTimeString().split(' ')[0] }</TableCell>\n              <TableCell align=\"center\">{ endTime.toTimeString().split(' ')[0] }</TableCell>\n              <TableCell align=\"center\">{ formatTimerCounter(duration) }</TableCell>\n              <TableCell align=\"center\">\n                <Button size=\"large\" className={classes.btnWithShadow} onClick={onInfoTaskBtnClick(id)}>Info</Button>\n              </TableCell>\n              <TableCell align=\"center\">\n                <Button size=\"large\" className={classes.btnWithShadow} onClick={onRemoveTaskBtnClick(id)}>Delete</Button>\n              </TableCell>\n            </TableRow>\n          )) : <p data-test-id=\"empty-table-paragraph\">Table Empty</p> }\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nTableTab.propTypes = {\n  tasks: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string,\n    startTime: PropTypes.instanceOf(Date),\n    endTime: PropTypes.instanceOf(Date),\n    duration: PropTypes.number,\n  }).isRequired).isRequired,\n  deleteTask: PropTypes.func.isRequired,\n};\n\n\nexport default connect(\n  ({ tasksStore: { tasks } }) => ({ tasks }),\n  { deleteTask },\n)(memo(TableTab));\n","/* eslint-disable react/forbid-prop-types */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n\nconst TabPanel = ({\n  children, value, index, ...other\n}) => (\n  <div\n    component=\"div\"\n    role=\"tabpanel\"\n    hidden={value !== index}\n    id={`simple-tabpanel-${index}`}\n    // eslint-disable-next-line react/jsx-props-no-spreading\n    {...other}\n  >\n    {children}\n  </div>\n);\n\nTabPanel.propTypes = {\n  children: PropTypes.node.isRequired,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nexport default TabPanel;\n","import React, { forwardRef } from 'react';\nimport { Link } from 'react-router-dom';\n\n// eslint-disable-next-line react/jsx-props-no-spreading\nconst RouterLink = forwardRef((props, ref) => (<Link innerRef={ref} {...props} />));\n\nexport default RouterLink;\n","/* eslint-disable react/forbid-prop-types, react/require-default-props */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tab } from '@material-ui/core';\n\nimport RouterLink from './RouterLink';\n\nconst TabLink = ({\n  to,\n  value,\n  ...props\n// eslint-disable-next-line react/jsx-props-no-spreading\n}) => (<Tab component={RouterLink} to={to ?? value} value={value} {...props} />);\n\nTabLink.propTypes = {\n  to: PropTypes.any,\n  value: PropTypes.any,\n};\n\nexport default TabLink;\n","import React, { memo } from 'react';\nimport { AppBar, Tabs } from '@material-ui/core';\n\nimport useStyles from './styles';\nimport useTabsWithRouter from './useTabsWithRouter';\nimport ChartTab from '../ChartTab';\nimport TableTab from '../TableTab';\nimport TabPanel from './TabPanel';\nimport TabLink from './TabLink';\n\n\n// https://github.com/mui-org/material-ui/issues/18811\nfunction SimpleTabs() {\n  const tabValue = useTabsWithRouter(['/tasks', '/chart'], '/tasks');\n  const classes = useStyles();\n\n  return (\n    <div className={classes.infoTabsContainer}>\n      <AppBar position=\"static\">\n        <Tabs variant=\"fullWidth\" value={tabValue}>\n          <TabLink value=\"/tasks\" label=\"TASKS LOG\" />\n          <TabLink value=\"/chart\" label=\"TASKS CHART\" />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={tabValue} index=\"/tasks\">\n        <TableTab />\n      </TabPanel>\n      <TabPanel value={tabValue} index=\"/chart\">\n        <ChartTab />\n      </TabPanel>\n    </div>\n  );\n}\n\nexport default memo(SimpleTabs);\n","import { useRouteMatch } from 'react-router-dom';\n\nexport default function useTabsWithRouter(routes, defaultRoute) {\n  const match = useRouteMatch(routes);\n\n  return match?.path ?? defaultRoute;\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles(() => ({\n  app: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n    height: '100hv',\n    margin: 0,\n    border: 0,\n  },\n}));\n","import React from 'react';\n\nimport Timer from './components/Timer';\nimport InfoTabs from './components/InfoTabs';\n\n\nimport useStyles from './styles';\n\nexport default function MainPage() {\n  const classes = useStyles();\n  return (\n    <div className={classes.app}>\n      <Timer />\n      <InfoTabs />\n    </div>\n  );\n}\n","import React, { useEffect } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './store/reducer';\nimport rootSaga from './sagas';\nimport NotFoundPage from './pages/NotFoundPage';\nimport TaskDetailsPage from './pages/TaskDetailsPage';\nimport MainPage from './pages/MainPage';\n\n\nimport { LOAD_STORE_REQUEST } from './store/types';\nimport { saveState } from './localStorage';\n\nstore.runSaga(rootSaga, store.dispatch);\n\nstore.dispatch({ type: LOAD_STORE_REQUEST });\n\n\nfunction App() {\n  useEffect(() => {\n    // eslint-disable-next-line no-undef\n    window.addEventListener('beforeunload', (ev) => {\n      ev.preventDefault();\n      saveState(store.getState());\n    });\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <Router basename=\"/simple-time-tracker\">\n        <Switch>\n          <Redirect from=\"/\" to=\"/tasks\" exact />\n          <Route path={['/tasks', '/chart']} exact>\n            <MainPage />\n          </Route>\n          <Route path=\"/tasks/:id\" exact>\n            <TaskDetailsPage />\n          </Route>\n          <Route path=\"/404\" component={NotFoundPage} exact />\n          <Redirect to=\"/404\" />\n        </Switch>\n      </Router>\n    </Provider>\n  );\n}\n\nif (window.Cypress) {\n  window.store = store;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// eslint-disable-next-line no-undef\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}